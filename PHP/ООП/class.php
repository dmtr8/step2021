<?php

//Псевдопеременная $this доступна в том случае, если метод был вызван в контексте объекта.
// $this является ссылкой на вызываемый объект.

//Доступ к свойствам и методам класса, объявленным как public (общедоступный), разрешен отовсюду.
// Модификатор protected (защищенный) разрешает доступ самому классу,
// наследующим его классам и родительским классам.
// Модификатор private (закрытый) ограничивает область видимости так, что только класс,
// где объявлен сам элемент, имеет к нему доступ.

//Классы, в которых объявлен метод-конструктор, будут вызывать этот метод при каждом создании нового объекта
//Конструкторы, определенные в классах-родителях не вызываются автоматически,
// если дочерний класс определяет собственный конструктор. Чтобы вызвать конструктор,
// объявленный в родительском классе, требуется вызвать parent::__construct() внутри конструктора дочернего класса.
// Если в дочернем классе не определен конструктор, то он может быть унаследован от родительского класса
// как обычный метод (если он не был определен как приватный).

class myClass
{
    function __construct()
    {
        echo "hello";
    }
}
//$obj = new myClass();

class myClass2 extends myClass{

    function __construct()
    {

        parent::__construct();
        echo " word";
    }

}
$obj2 = new myClass2();

//Оператор разрешения области видимости (также называемый "Paamayim Nekudotayim")
// или просто "двойное двоеточие" - это лексема, позволяющая обращаться к статическим свойствам,
// константам и переопределенным свойствам или методам класса.


class MyClass3 {
    const CONST_VALUE = 'Значение константы';
    public static $pub = "asta";
}

//$classname = 'MyClass3';
//echo $classname::CONST_VALUE; // Начиная с PHP 5.3.0

//echo MyClass3::CONST_VALUE;
//echo MyClass3::$pub;

//Объявление свойств и методов класса статическими позволяет обращаться к ним без создания экземпляра класса.
// Свойство класса, объявленное как статическое, не может быть доступно посредством экземпляра класса
// (но статический метод может быть вызван).
//Так как статические методы вызываются без создания экземпляра класса,
// то псевдопеременная $this недоступна внутри метода, объявленного как статический.
//Статические свойства не могут быть доступны через объект с помощью оператора "->".

